spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: "http://localhost:9090/realms/SensorApplication"
      client:
        registration:
          #          github:
          #            client-id: Ov23liZTq96NkAxcnuEl
          #            client-secret: ab35cdafc2fca06cee2b8748beb5e937ba09d72c
          keycloak:
            client-id: sensor-application-rest-APIs
            client-secret: <YOUR_CLIENT_SECRET>
            scope: openid, profile, email
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
        provider:
          keycloak:
            issuer-uri: "http://localhost:9090/realms/SensorApplication"
  data:
    redis:
      host: localhost
      port: 6379
  application:
    name: user-management
  liquibase:
    enabled: true
    change-log: classpath:db.changelog/master.xml
    #    default-schema: public
    database-change-log-table: DB_CHANGE_LOG
    database-change-log-lock-table: DB_CHANGE_LOG_LOCK
    drop-first: false
  jpa:
    show-sql: true
    properties:
      hibernate.default_schema: public
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        ddl-auto: update
        format_sql: true
    generate-ddl: true

web:
  cors:
    allowed-origins: "http://localhost:3000"
    allowed-methods: GET, POST, PATCH, PUT, DELETE, OPTIONS, HEAD
    max-age: 3600
    allowed-headers: "Requestor-Type"
    exposed-headers: "X-Get-Header"

logging:
  level:
    root: info
    com:
      web: info
    org:
      hibernate:
        SQL: DEBUG
        type:
          descriptor:
            sql:
              BasicBinder: TRACE

server:
  port: 8083
